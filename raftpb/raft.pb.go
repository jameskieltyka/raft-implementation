// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package raft

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VoteRequest struct {
	Term                 uint32   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateID          string   `protobuf:"bytes,2,opt,name=candidateID,proto3" json:"candidateID,omitempty"`
	LastLogIndex         uint32   `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm          uint32   `protobuf:"varint,4,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteRequest) Reset()         { *m = VoteRequest{} }
func (m *VoteRequest) String() string { return proto.CompactTextString(m) }
func (*VoteRequest) ProtoMessage()    {}
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *VoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteRequest.Unmarshal(m, b)
}
func (m *VoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteRequest.Marshal(b, m, deterministic)
}
func (m *VoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteRequest.Merge(m, src)
}
func (m *VoteRequest) XXX_Size() int {
	return xxx_messageInfo_VoteRequest.Size(m)
}
func (m *VoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VoteRequest proto.InternalMessageInfo

func (m *VoteRequest) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteRequest) GetCandidateID() string {
	if m != nil {
		return m.CandidateID
	}
	return ""
}

func (m *VoteRequest) GetLastLogIndex() uint32 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *VoteRequest) GetLastLogTerm() uint32 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type VoteResponse struct {
	Term                 uint32   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted          bool     `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteResponse) Reset()         { *m = VoteResponse{} }
func (m *VoteResponse) String() string { return proto.CompactTextString(m) }
func (*VoteResponse) ProtoMessage()    {}
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *VoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteResponse.Unmarshal(m, b)
}
func (m *VoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteResponse.Marshal(b, m, deterministic)
}
func (m *VoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteResponse.Merge(m, src)
}
func (m *VoteResponse) XXX_Size() int {
	return xxx_messageInfo_VoteResponse.Size(m)
}
func (m *VoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VoteResponse proto.InternalMessageInfo

func (m *VoteResponse) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteResponse) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

type EntryData struct {
	Term                 uint32   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderID             string   `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	PrevLogIndex         uint32   `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm          uint32   `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	Entries              []*Entry `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit         uint32   `protobuf:"varint,6,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryData) Reset()         { *m = EntryData{} }
func (m *EntryData) String() string { return proto.CompactTextString(m) }
func (*EntryData) ProtoMessage()    {}
func (*EntryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *EntryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryData.Unmarshal(m, b)
}
func (m *EntryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryData.Marshal(b, m, deterministic)
}
func (m *EntryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryData.Merge(m, src)
}
func (m *EntryData) XXX_Size() int {
	return xxx_messageInfo_EntryData.Size(m)
}
func (m *EntryData) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryData.DiscardUnknown(m)
}

var xxx_messageInfo_EntryData proto.InternalMessageInfo

func (m *EntryData) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *EntryData) GetLeaderID() string {
	if m != nil {
		return m.LeaderID
	}
	return ""
}

func (m *EntryData) GetPrevLogIndex() uint32 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *EntryData) GetPrevLogTerm() uint32 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *EntryData) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *EntryData) GetLeaderCommit() uint32 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

type EntryResults struct {
	Term                 uint32   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryResults) Reset()         { *m = EntryResults{} }
func (m *EntryResults) String() string { return proto.CompactTextString(m) }
func (*EntryResults) ProtoMessage()    {}
func (*EntryResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *EntryResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryResults.Unmarshal(m, b)
}
func (m *EntryResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryResults.Marshal(b, m, deterministic)
}
func (m *EntryResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryResults.Merge(m, src)
}
func (m *EntryResults) XXX_Size() int {
	return xxx_messageInfo_EntryResults.Size(m)
}
func (m *EntryResults) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryResults.DiscardUnknown(m)
}

var xxx_messageInfo_EntryResults proto.InternalMessageInfo

func (m *EntryResults) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *EntryResults) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type Entry struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{4}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*VoteRequest)(nil), "VoteRequest")
	proto.RegisterType((*VoteResponse)(nil), "VoteResponse")
	proto.RegisterType((*EntryData)(nil), "EntryData")
	proto.RegisterType((*EntryResults)(nil), "EntryResults")
	proto.RegisterType((*Entry)(nil), "Entry")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b) }

var fileDescriptor_b042552c306ae59b = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xbf, 0x6a, 0xf3, 0x30,
	0x14, 0xc5, 0xe3, 0x2f, 0xff, 0xaf, 0xed, 0x45, 0x7c, 0x83, 0x09, 0x14, 0x8c, 0xa6, 0x0c, 0xc1,
	0x43, 0xba, 0x76, 0x29, 0x4d, 0x28, 0x81, 0xd2, 0x41, 0x94, 0xee, 0x6a, 0x74, 0x53, 0x02, 0x8e,
	0xe4, 0x4a, 0xd7, 0xa1, 0x7d, 0x84, 0x3e, 0x59, 0x5f, 0xab, 0x58, 0x71, 0x8c, 0x5a, 0xd2, 0xcd,
	0xe7, 0x87, 0xaf, 0x74, 0xce, 0xd1, 0x05, 0xb0, 0x72, 0x47, 0x45, 0x65, 0x0d, 0x19, 0xfe, 0x19,
	0x41, 0xfc, 0x6c, 0x08, 0x05, 0xbe, 0xd5, 0xe8, 0x88, 0x31, 0x18, 0x10, 0xda, 0x43, 0x16, 0xe5,
	0xd1, 0x3c, 0x15, 0xfe, 0x9b, 0xe5, 0x10, 0x6f, 0xa5, 0x56, 0x7b, 0x25, 0x09, 0x37, 0xab, 0xec,
	0x5f, 0x1e, 0xcd, 0xa7, 0x22, 0x44, 0x8c, 0x43, 0x52, 0x4a, 0x47, 0x0f, 0xe6, 0x75, 0xa3, 0x15,
	0xbe, 0x67, 0x7d, 0x3f, 0xfd, 0x83, 0x35, 0xa7, 0xb4, 0xfa, 0xa9, 0xb9, 0x60, 0xe0, 0x7f, 0x09,
	0x11, 0x5f, 0x41, 0x72, 0xb2, 0xe2, 0x2a, 0xa3, 0x1d, 0xfe, 0xe5, 0xe5, 0x68, 0x08, 0xef, 0xad,
	0xd4, 0x84, 0xca, 0x7b, 0x99, 0x88, 0x10, 0xf1, 0xaf, 0x08, 0xa6, 0x6b, 0x4d, 0xf6, 0x63, 0x25,
	0x49, 0x5e, 0x3c, 0x63, 0x06, 0x93, 0x12, 0xa5, 0x42, 0xdb, 0x85, 0xe9, 0x74, 0x93, 0xa4, 0xb2,
	0x78, 0xfc, 0x9d, 0x24, 0x64, 0x8d, 0x87, 0x56, 0x87, 0x49, 0x02, 0xc4, 0x72, 0x18, 0xa3, 0x26,
	0xbb, 0x47, 0x97, 0x0d, 0xf3, 0xfe, 0x3c, 0x5e, 0x8e, 0x0a, 0x6f, 0x49, 0x9c, 0xb1, 0x6f, 0xcc,
	0xdf, 0x79, 0x67, 0x0e, 0x87, 0x3d, 0x65, 0xa3, 0xb6, 0xb1, 0x80, 0xf1, 0x1b, 0x48, 0x4e, 0x53,
	0xe8, 0xea, 0x92, 0xdc, 0xc5, 0x2c, 0x19, 0x8c, 0x5d, 0xbd, 0xdd, 0xa2, 0x73, 0x6d, 0x17, 0x67,
	0xc9, 0xaf, 0x60, 0xe8, 0xa7, 0xd9, 0x7f, 0x18, 0x1e, 0x65, 0x59, 0xa3, 0x9f, 0x9b, 0x8a, 0x93,
	0x58, 0xee, 0x60, 0x22, 0xe4, 0x8e, 0x1e, 0x8d, 0x42, 0xb6, 0x80, 0xb8, 0x7d, 0xff, 0xa6, 0x7f,
	0x96, 0x14, 0xc1, 0x46, 0xcc, 0xd2, 0x22, 0x7c, 0x14, 0xde, 0x63, 0x0b, 0x48, 0x6f, 0xab, 0x0a,
	0xb5, 0x5a, 0xb7, 0x59, 0xa0, 0xe8, 0xfa, 0x9e, 0xa5, 0x45, 0x68, 0x99, 0xf7, 0x5e, 0x46, 0x7e,
	0xcf, 0xae, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x26, 0xf6, 0x03, 0x75, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftNodeClient is the client API for RaftNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftNodeClient interface {
	RequestVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error)
	AppendEntries(ctx context.Context, in *EntryData, opts ...grpc.CallOption) (*EntryResults, error)
}

type raftNodeClient struct {
	cc *grpc.ClientConn
}

func NewRaftNodeClient(cc *grpc.ClientConn) RaftNodeClient {
	return &raftNodeClient{cc}
}

func (c *raftNodeClient) RequestVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error) {
	out := new(VoteResponse)
	err := c.cc.Invoke(ctx, "/RaftNode/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftNodeClient) AppendEntries(ctx context.Context, in *EntryData, opts ...grpc.CallOption) (*EntryResults, error) {
	out := new(EntryResults)
	err := c.cc.Invoke(ctx, "/RaftNode/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftNodeServer is the server API for RaftNode service.
type RaftNodeServer interface {
	RequestVote(context.Context, *VoteRequest) (*VoteResponse, error)
	AppendEntries(context.Context, *EntryData) (*EntryResults, error)
}

// UnimplementedRaftNodeServer can be embedded to have forward compatible implementations.
type UnimplementedRaftNodeServer struct {
}

func (*UnimplementedRaftNodeServer) RequestVote(ctx context.Context, req *VoteRequest) (*VoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVote not implemented")
}
func (*UnimplementedRaftNodeServer) AppendEntries(ctx context.Context, req *EntryData) (*EntryResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntries not implemented")
}

func RegisterRaftNodeServer(s *grpc.Server, srv RaftNodeServer) {
	s.RegisterService(&_RaftNode_serviceDesc, srv)
}

func _RaftNode_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftNodeServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RaftNode/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftNodeServer).RequestVote(ctx, req.(*VoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftNode_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftNodeServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RaftNode/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftNodeServer).AppendEntries(ctx, req.(*EntryData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RaftNode",
	HandlerType: (*RaftNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestVote",
			Handler:    _RaftNode_RequestVote_Handler,
		},
		{
			MethodName: "AppendEntries",
			Handler:    _RaftNode_AppendEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}
